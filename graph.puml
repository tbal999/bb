@startuml
package ...main{
class Personal {
+Browser: string
+Save(): 
+*Load(): 
}
}
package ...main{
class BB {
+B: []Board
-saveSnapshot(): Snap
+*Load(): 
-snapcheck(s Snap): bool
-loadpin(s Snap): []int
-loadall(s Snap, searchstring string): 
-loadgem(ix int): string
-viewurl(ix int): bool
+*loadboard(ix int, searchstring string): bool
+*delboard(i int): 
+*anoncollect(): 
+*collect(homeuser string): 
+*addtoboard(input string, anon bool): 
+*addURLtitle(botindex int, input string, anon bool): 
}
}
package ...main{
class Pin {
+Title: []string
+Date: []string
+*Add(ix int): 
+*Remove(ix int): 
+Save(): 
+*Load(): 
}
}
package ...main{
class Snap {
+Owner: []string
+Title: []string
+Date: []string
+Length: []int
+Checked: []bool
+Save(): 
+*Load(): 
+*Switch(title string): 
+Exists(title string): bool
+Whatsnew(): []string
}
}
package ...main{
class Mod {
+Name: []string
+Boardarchive: []string
+Datearchive: []string
+Save(): 
+*Load(): 
+*Collect(): 
+*collect(homeuser string): 
+Check(b Board): bool
+IsMod(): 
+IsUserMod(uname string): bool
+*Archive(item int): 
+*AddMod(user string): 
+*RemoveMod(user string): 
}
}
package ...main{
class Anon {
+Title: []string
+Date: []string
+Board: []Anonboard
+Save(): 
+*Load(): 
+*Add(title string, contents []string): 
}
}
package ...main{
class Board {
+Date: string
+Owner: string
+Title: string
+Contents: [][]string
+*Load(filename string): 
+Delete(filename string): 
+Save(filename string): 
}
}
package ...main{
class Last {
+Title: string
+Date: string
+Save(): 
+*Load(): 
}
}
package ...main{
class Anonboard {
+Contents: [][]string

}
}

@enduml